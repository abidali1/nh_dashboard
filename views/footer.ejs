  <footer class="main-footer">
    <div class="float-right d-none d-sm-block">
      <b>Version</b> 1.0.0
    </div>
    <strong>Copyright &copy; 2023 <a href="#">newshunt</a>.</strong> All rights reserved.
  </footer>

  <!-- Control Sidebar -->
  <aside class="control-sidebar control-sidebar-dark">
    <!-- Control sidebar content goes here -->
  </aside>
  <!-- /.control-sidebar -->
  </div>
  <!-- ./wrapper -->

  <!-- jQuery -->
  <script src="assets/plugins/jquery/jquery.min.js"></script>
  <!-- Bootstrap 4 -->
  <script src="assets/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>
  <!-- AdminLTE App -->
  <script src="assets/dist/js/adminlte.min.js"></script>
  <!-- AdminLTE for demo purposes -->
  <script src="assets/dist/js/demo.js"></script>

  <script src="assets/plugins/datatables/jquery.dataTables.min.js"></script>
  <script src="assets/plugins/datatables-bs4/js/dataTables.bootstrap4.min.js"></script>
  <script src="assets/plugins/datatables-responsive/js/dataTables.responsive.min.js"></script>
  <script src="assets/plugins/datatables-responsive/js/responsive.bootstrap4.min.js"></script>
  <script src="assets/plugins/datatables-buttons/js/dataTables.buttons.min.js"></script>
  <script src="assets/plugins/datatables-buttons/js/buttons.bootstrap4.min.js"></script>

  <!-- HEAVY LOADING TIME -->
  <!-- <script src="assets/plugins/jszip/jszip.min.js"></script>
  <script src="assets/plugins/pdfmake/pdfmake.min.js"></script>
  <script src="assets/plugins/pdfmake/vfs_fonts.js"></script> -->
  <script src="assets/plugins/datatables-buttons/js/buttons.html5.min.js"></script>
  <script src="assets/plugins/datatables-buttons/js/buttons.print.min.js"></script>
  <script src="assets/plugins/datatables-buttons/js/buttons.colVis.min.js"></script>
  </body>

  </html>
  <script>
    var dataTable;

    var notesBTN;
    $(function() {
      //  alert();
      // to be send to a new branch name abid

      // only for abid
      getFolderList();
      $('#userForm').submit(function() {

        addFolder().then( () => getFolderList());
        return false;
      });

      $('body').on('click', '#addRemoveFolder', function() {
        getFolderListAddRemove();

      });


      $("body").on('click', '.removeFolder', async function() {

        if (confirm("Are you sure you want to delete this folder?")) {
          try {
            const response = await fetch(`folder/${$(this).attr('remove_id')}`, {
              method: "DELETE",
              headers: {
                "Content-type": "application/json; charset=UTF-8"
              }
            });
            const json = await response.json();
            myToast('Folder removed succesfully', 'success');
            $(this).parent().parent().fadeOut();
            getFolderList();
          } catch (err) {
            console.log(err);
            myToast('something went wrong. Console', 'error');

          }
        } else {}


      });



      $('#userFormCheckbox').on('change', ':radio', function() {

        addNewsToFolder(
          $(this).attr("id"),
          $('#modelNewsId').html(),
          3, // hard_coded
          this.checked
        ).then(result => {

          console.log(result);

          var folder_name = document.querySelector(`[news_id="${$('#modelNewsId').html()}"]`);

          if ($(this).attr("id") == "0") {
            $(folder_name).removeAttr('folder_id');
            $(folder_name).html(`<i class="fas fa-save mr-1 text-sm"></i>Not Saved`);
          } else {
            $(folder_name).attr('folder_id', result.folder_id);
            $(folder_name).html(`<i class="fas fa-save mr-1 text-success"></i> SAVED (${$(this).next('label').html()})`);
          }



    
          getFolderList();
        });



      });

      $("body").on('click', '.saveBTN', function() {
        $('#modelNewsId').html($(this).attr('news_id'));
        //  alert($(this).attr('folder_id'));
        if ($(this).attr('folder_id') == undefined) {
          $('#modelFolderId').html('');
        } else
          $('#modelFolderId').html($(this).attr('folder_id'));
        //  alert($('#modelFolderId').html());
        getFolderListForModel();

      });

      $('#saveNotes').on('click', function() {

        addNotes($('#nodesModelNewsId').html(),
          3,

          $('#notesText').val()).then(() => {
          $(notesBTN).html(`<i class="fas fa-sticky-note mr-1" style="color:green"></i>Notes (Added)`);
        });


      });

      $("body").on('click', '.btnNotes', function() {
        notesBTN = $(this);
        $('#nodesModelNewsId').html($(this).attr('news_id'));
        getNotes(3, $(this).attr('news_id'));
      });



      $("body").on('click', '.btnNotesEdit', function() {
        window.open("/notes/" + 3 + "!" + $(this).attr('news_id'), "_blank");
      });

      $("body").on('click', '.openNews', function() {
        window.open("/singleNews/" + 3 + "!" + $(this).attr('news_id'), "_blank");
      });


      $("body").on('click', '.deleteNote', function() {

        if (yesNoDialog("Are you sure to delete this note?")) {
          deleteNote($(this).attr('notes_id')).then(() => {

            //    alert();
            $(this).parents('.direct-chat-msg').fadeOut();
            //  console.log( $(this).parent('.direct-chat-msg'));
          });
        }

        //alert($(this).attr('notes_id'));
      });




      $('body').on('click', '.dtEditNote', function() {

        window.open("/notes/" + 3 + "!" + $(this).attr('news_id'), "_blank");
      });

      $('body').on('click', '.dtDeleteNote', function() {
        if (yesNoDialog("Are you sure to delete this note?")) {

          deleteNote($(this).attr('note_id')).then(() => {
            dataTable
              .row($(this).parents('tr'))
              .remove()
              .draw();

          });
        }
      });




      $('#allNotes').on('click', function() {
        getAllNotes(3);
        $('#secAnalytics').hide();
        $('#newsBlock').hide();
        $('#secNotes').show();
        $('#sec_keywords').hide();
        $('#loadMore').hide();


      });


      $('#analytics').on('click', function() {

        getAnalytics(3);

        $('#secAnalytics').show();
        $('#newsBlock').hide();
        $('#secNotes').hide();
        $('#sec_keywords').hide();
        $('#loadMore').hide();


      });

    });



    async function addFolder() {
      // data to be sent to the POST request
      let _data = {
        name: $('#fullname').val(),
        user_id: 3 // hard_coded
      }

      try {
        const response = await fetch('/news/folder/add', {
          method: "POST",
          body: JSON.stringify(_data),
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });

        const json = await response.json();
        var listItem = `   <div style='padding: 10px; background-color: #eef2ef;' class="form-group">
        <div > 
         
         <label style="margin-bottom:0px;margin-left:20px" ><i style='  margin-right: 10px;' class="nav-icon fas  fa-folder"></i> ${json.name}</label>
         <a href="#" class="removeFolder" style="float:right;margin-right:20px" remove_id="${json.id}"> <i class="nav-icon fas text-danger  fa-trash"></i> </a>  
      </div>
      </div>`;


        $('#removeFolderDiv').append(listItem);

        myToast('Added Successfully', 'success')

        // dataTable.row.add([json.id, json.name, json.role, json.createdAt]).draw(false);
      } catch (err) {
        console.log(err);
        myToast('something went wrong', 'error')

      }

    }

    async function getFolderList() {

      try {
        const response = await fetch('news/folder/3', {
          method: "GET",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });

        const json = await response.json();

        $('#folderList').html(` <li class="nav-item">
                  <a id="addRemoveFolder" data-toggle="modal" data-target="#exampleModal" class="nav-link">
                    <i class="far fa-plus-square nav-icon"></i>
                    <p>Add remove folder</p>
                  </a>
                </li>`);


        //  console.log(json);
        json.forEach(row => {
          var listItem = ` <li class="nav-item">
                  <a  folder_id="${row.id}" class=" nav_folders nav-link">
                    <i class="far  fa-folder-open nav-icon"></i>
                    <p>${row.name}</p>
                      <span class="badge badge-info right">${row.news}</span>

                  </a>
                </li>`;


          $('#folderList').append(listItem);

          // alert($('#folderList').html());
        });




      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }

    }

    async function getFolderListForModel() {

      try {
        const response = await fetch('news/folder/3', {
          method: "GET",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });

        var check = $('#modelFolderId').html();
        //  alert(check);
        //      alert($('#modelFolderId').html());
        var checked;

        const json = await response.json();
        //  console.log(json);
        $('#addToFolderModelFolderList').html('');
        json.forEach(row => {

          if (row.id == check) checked = 'checked';
          else checked = '';
          var listItem = `   <div style='padding: 10px; background-color: #eef2ef;' class="form-group">
              <div class="icheck-material-teal"> 
                <input type="radio" name='folders' ${checked} id="${row.id}"/>  
               <label for="${row.id}"><i class="nav-icon fas  fa-folder"></i> ${row.name}</label>
            </div>
            </div>`;


          $('#addToFolderModelFolderList').append(listItem);

          //   myToast('Added to folder succesfully', 'success');
          // alert($('#folderList').html());
        });

        var removeFromFolders = `   <div id="delFromFolder" style='padding: 10px; background-color: #f4dde8;' class="form-group">
              <div class="icheck-material-teal"> 
                <input type="radio" name='folders'  id="0"/>  
               <label for="0"><i class="nav-icon fas  fa-trash text-danger"></i> Delete From Folder</label>
            </div>
            </div>`;


        $('#addToFolderModelFolderList').append(removeFromFolders);




      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }

    }

    async function getFolderListAddRemove() {

      try {
        const response = await fetch('news/folder/3', {
          method: "GET",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });

        var check = $('#modelFolderId').html();
        //  alert(check);
        //      alert($('#modelFolderId').html());

        const json = await response.json();
        //  console.log(json);
        $('#removeFolderDiv').html('');
        json.forEach(row => {


          var listItem = `   <div style='padding: 10px; background-color: #eef2ef;' class="form-group">
        <div > 
         
         <label style="margin-bottom:0px;margin-left:20px" ><i style='  margin-right: 10px;' class="nav-icon fas  fa-folder"></i> ${row.name}</label>
         <a href="#" class="removeFolder" style="float:right;margin-right:20px" remove_id="${row.id}"> <i class="nav-icon fas text-danger  fa-trash"></i> </a>  
      </div>
      </div>`;


          $('#removeFolderDiv').append(listItem);

          //   myToast('Added to folder succesfully', 'success');
          // alert($('#folderList').html());
        });




      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }

    }


    async function addNewsToFolder(folder_id, news_id, user_id, check_status) {
      // data to be sent to the POST request
      let _data = {
        folder_id: folder_id,
        news_id: news_id,
        user_id: user_id, // hard_coded
        check_status: check_status
      }

      try {
        const response = await fetch('/folder/addnews', {
          method: "POST",
          body: JSON.stringify(_data),
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });

        const json = await response.json();
        myToast('Added to folder succesfully', 'success');
        return json;


        return json;
        // dataTable.row.add([json.id, json.name, json.role, json.createdAt]).draw(false);
      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }



    }

    async function addNotes(news_id, user_id, notes) {
      // data to be sent to the POST request
      let _data = {
        news_id: news_id,
        user_id: user_id, // hard_coded
        notes: notes
      }

      try {
        const response = await fetch('/addNotes', {
          method: "POST",
          body: JSON.stringify(_data),
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });

        myToast('Notes added successfully', 'success');
        const json = await response.json();
        //    return json;


        var listItem = `               
                <div class="direct-chat-msg right">
                  <div class="direct-chat-infos clearfix">
                    <button notes_id="${json.id}" type="button" class="close deleteNote"  aria-label="Close">
                      <span aria-hidden="true">×</span>
                    </button>
                    <span class="direct-chat-timestamp float-left">${json.createdAt}</span>
                  </div>
           
                  <div class="direct-chat-text">
                    ${json.notes}
                  </div>
                </div>
          
            `;


        $('#notesBlock').append(listItem);

        //  myToast('Note added succesfully', 'success');



        return json;
        // dataTable.row.add([json.id, json.name, json.role, json.createdAt]).draw(false);
      } catch (err) {
        console.log(err);
        myToast('Check Console', 'error');

      }
    }


    async function getNotes(user_id, news_id) {




      // data to be sent to the POST request
      let _data = {
        name: $('#fullname').val(),
        user_id: 3 // hard_coded
      }

      try {
        const response = await fetch(`getNotes/${user_id}!${news_id}`, {
          method: "GET",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });
        const json = await response.json();
        $('#notesBlock').html('');
        json.forEach(row => {

          var listItem = `               
        <div class="direct-chat-msg right">
          <div class="direct-chat-infos clearfix">
            <button notes_id="${row.id}" type="button" class="close deleteNote"  aria-label="Close">
              <span aria-hidden="true">×</span>
            </button>
            <span class="direct-chat-timestamp float-left">${row.createdAt}</span>
          </div>
   
          <div style="border: 5px solid #cfe0f1; margin-right: 0; background-color: white;"  class="direct-chat-text">
            ${row.notes}
          </div>
        </div>
  
    `;


          $('#notesBlock').append(listItem);

          // alert($('#folderList').html());
        });




      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }

    }



    async function deleteNote(notes_id) {
      try {
        const response = await fetch(`deleteNotes/${notes_id}`, {
          method: "DELETE",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });
        const json = await response.json();
        myToast('Note removed succesfully', 'success');
      } catch (err) {
        console.log(err);
        myToast('something went wrong. Console', 'error');

      }

    }

    async function getAllNotes(user_id) {




      // data to be sent to the POST request
      let _data = {
        name: $('#fullname').val(),
        user_id: 3 // hard_coded
      }

      try {
        const response = await fetch(`getAllNotes/${user_id}`, {
          method: "GET",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });
        const json = await response.json();
        $('#secNotes').html(``);
        $('#secNotes').html(`<div ">

<div class="container-fluid">
<div class="row">
<div class="col-12">

<!-- /.card -->

<div class="card">
<div class="card-header">
  <h3 class="card-title">Notes</h3>
</div>
<!-- /.card-header -->
<div class="card-body">
  <table  style="font-size:x-small" id="example1"  class="table table-bordered table-striped">
    <thead>
      <tr>
        <th> ID</th>
        <th>News ID</th>
        <th>User ID</th>
        <th>Note</th>
        <th>News Title</th>
        <th>URL</th>
        <th>Date</th>
        <th>Action</th>

      </tr>
    </thead>
    <tbody id="dtBoday" >



    </tbody>
   
  </table>
</div>
<!-- /.card-body -->
</div>
<!-- /.card -->
</div>
<!-- /.col -->
</div>
<!-- /.row -->
</div>

`);

        dataTable = $("#example1").DataTable({

          order: [
            [0, 'desc']
          ],
          "responsive": true,
          "lengthChange": false,
          "autoWidth": false,
          "buttons": ["copy", "csv", "excel", "pdf", "print", "colvis"],
        });
        dataTable.buttons().container().appendTo('#example1_wrapper .col-md-6:eq(0)');

        dataTable.columns([1, 2]).visible(false);
        json.forEach(row => {

          var news_short = row.title.substring(0, 50) + '...';
          dataTable.row.add([
            row.id,
            row.news_id,
            row.user_id,
            '<div  style="border: 5px solid #cfe0f1; margin: 0; background-color: white;"  class="direct-chat-text">' + row.notes + '</a>',
            `<a style='font-weight: 500;'> ${news_short.toUpperCase()} </div>`,
            '<a href=' + row.url + '>Open News</a>',
            getDateTimeFormate(row.createdAt),
            '<a href="#"  style="font-size:small"  note_id="' + row.id + '"  news_id="' + row.news_id + '" class="dtEditNote"><i class="fas fa-edit mr-1 "></i></a><a href="#"  style="font-size:small" note_id="' + row.id + '" class="dtDeleteNote"><i style="margin-left:10px" class="fas fa-trash mr-1 text-danger" ></a>'
          ]).draw();


        });




      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }

    }


    async function getAnalytics(user_id) {




      // data to be sent to the POST request
      let _data = {
        name: $('#fullname').val(),
        user_id: 3 // hard_coded
      }

      try {
        const response = await fetch(`getAnalytics/${user_id}`, {
          method: "GET",
          headers: {
            "Content-type": "application/json; charset=UTF-8"
          }
        });
        var jsons = await response.json();
        jsons.forEach(json => {

          $('#Acountries').html(json.county);
          $('#Akeywords').html(json.keywords);
          $('#Aopinions').html(json.opinion);
          $('#Aregions').html(json.regions);
          $('#Afolders').html(json.forlders);
          $('#Asources').html(json.source);
          $('#AsavedNews').html(json.savenews);
          $('#Anotes').html(json.notes);


        });

        // alert($('#folderList').html());




      } catch (err) {
        console.log(err);
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          body: 'Server ERROR. check console.'
        });
      }

    }




    function myToast(message, type) {
      getAnalytics(3);
      if (type == 'success') {
        $(document).Toasts('create', {
          class: 'bg-success',
          title: 'Success',
          autohide: true,
          delay: 1000,
          subtitle: 'Done',
          body: message + '.'
        });
      } else {
        $(document).Toasts('create', {
          class: 'bg-danger',
          title: 'Error',
          subtitle: 'Failed',
          autohide: true,
          delay: 1000,
          body: message + '.'
        });
      }
    }

    function getDateTimeFormate(str) {
      var today = new Date(str);

      var date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();
      var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
      var dateTime = date + ' ' + time;
      return dateTime;
    }

    function yesNoDialog(message) {
      if (confirm(message)) return true;
      else return false;
    }
  </script>